namespace FieldsAndProperties
{
    internal class Program
    {
        static void Main(string[] args)
        {
           // Console.WriteLine("Hello, World!");
          // Class1 o = new Class1();
            //o.seti(100);
            // Console.WriteLine(o.geti);

            Class2 c2 = new Class2();
            c2.I = 60;//set
            Console.WriteLine(c2.I);//get

           
        }
    }

    public class Class1
    {
        private int i;

        public void seti(int VALUE)
        {
            if(VALUE<=100)
                i= VALUE;
            else
                Console.WriteLine("Invalid Vlaue for i");
        }
        public int geti()
        {
            return i;
        }
    }
    public class Class2
    {
        private int i;
        public int I
        {
            set
            {
                if(value <= 100)
                {
                    i= value;
                }
                else
                {
                    Console.WriteLine("Invalid value for i");
                }
            }
            get
            {
                return i;
            }
        }

        private string p1;
        public string P1
        {
            set
            {
                p1 = value;
            }
            get
            {
                return p1;
            }
        }
        //automatic property -  when there are no validations
        //get and set is auto generated by the compiler
        //private variable is auto generated by the compiler

        public int P3 { get; set; }

        //TO DO - CREATE A READ ONLY PROPERTY - only get, no set

    }


}